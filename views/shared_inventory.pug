article(class="shared-inventory-container")
  p(class="items-title") Items
  div(class="text-input-container")
    input(class="text-input search-bar" name='search_item' value=(current_search) autocomplete="off")
  div(class="items-container")
    - for(let i = 0; i < item_list.length; i++){
        div(class=(item_list[i] ? "shared-square pointer" : "shared-square") data-index=i data-id=(item_list[i] ? item_list[i]._id : ""))
           if item_list[i]
           img(class="item-svg" src=`data:image/image/png;base64,${Buffer.from(item_list[i].image).toString("base64")}`)
          
    - }

script.
    const itemsContainer = document.querySelector(".items-container");
    const searchInput = document.querySelector(".search-bar");

    itemsContainer.addEventListener("mouseover", () => readItemInfo(event, itemList));
    itemsContainer.addEventListener("click", addItem);
    searchInput.addEventListener("change", () => searchItem());

    // Make post request to add iteminstance to personal inventory
    function addItem(event) {
       if (itemList[event.target.dataset.index]) {
         fetch("inventory/iteminstance/create", {
           method: "POST",
           headers: {'Content-Type': 'application/json'},
           body: JSON.stringify({ id: event.target.dataset.id })
         })
         .then(response => response.json())
         .then(data => {
           addItemInstance(data.item_instance);
         })
         .catch((error) => console.log(error))
       }
    }

    function searchItem() {
      const searchedItemList = itemList.filter((item) => item.name.toLowerCase().includes(searchInput.value.toLowerCase()))

      const itemsContainer = document.querySelector(".items-container");

      while (itemsContainer.lastChild) {
        itemsContainer.removeChild(itemsContainer.lastChild);
      }

      for (let i = 0; i < searchedItemList.length; i++) {
        const square = document.createElement("square");
        const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        const path = document.createElementNS("http://www.w3.org/2000/svg", "path");

        const img = document.createElement("img");

        const binstr = String.fromCharCode(...searchedItemList[i].image.data);
        const b64str = btoa(binstr);

        img.src = `data:image/image/png;base64,${b64str}`;

        img.classList.add("item-svg")

        square.appendChild(img);

        square.classList.add("shared-square", "pointer");
        svg.classList.add("item-svg");

        svg.setAttribute("viewBox", "0 -0.5 32 32");
        path.setAttribute("d", "M11 1h8M9 2h12M8 3h14M8 4h15M7 5h6m4 0h7M7 6h5m6 0h6M7 7h4m8 0h5M7 8h4m8 0h5m-6 1h6m-7 1h6m-7 1h6m-7 1h6m-7 1h6m-6 1h5m-5 1h5m-5 1h4m-4 1h4m-4 1h4m-4 1h4m-4 1h4m-4 1h4m-4 1h4m-4 1h4m-4 4h4m-4 1h4m-4 1h4m-4 1h4");

        square.dataset.id = searchedItemList[i]._id;
        square.dataset.index = i;

        itemsContainer.appendChild(square);
        //square.appendChild(svg);
        svg.appendChild(path);
      }
    }
